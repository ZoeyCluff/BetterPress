---
    - hosts: localhost
      connection: local

      vars_prompt:
        - name: "domainShort"
          prompt: "What is the domain (without .com/.net)?"

        - name: "domainLong"
          prompt: "What is the domain with .com/.net?"

        - name: "cfemail"
          prompt: "What is your cloudflare email?"

        - name: "cfapi"
          prompt: "What is your cloudflare API key?"

        - name: "mysqluser"
          prompt: "What is your mysql user (that can create users and databases)?"

        - name: "mysqlpassword"
          prompt: "What is the password for your mysql user?"

        - name: "ipv4"
          prompt: "What is the ipv4 address of your server?"

        - name: "ipv6"
          prompt: "What is the ipv6 address of your server?"

      tasks:
        - name: ensure that nginxconfig.conf exists
          stat:
            path: ./configs/nginxconfig.conf
          register: nginx
          failed_when: nginx.stat.exists == False

        - name: ensure that wordpress's config exists
          stat:
            path: ./configs/wp-config-sample.php
          register: wpconfig
          failed_when: wpconfig.stat.exists == False

        - name: ensure ssl folder exists
          file:
            path: /etc/nginx/ssl/
            state: directory

        - name: ensure ssl dhparam exists
          stat:
            path: /etc/nginx/ssl/dhparam.pem
          register: missingdhparam

        - name: ensure ssl folder exists
          file:
            path: /etc/nginx/ssl/
            state: directory
          when: missingdhparam.stat.exists == False

        - name: generate dhprams
          command: openssl dhparam -out /etc/nginx/ssl/dhparam.pem 2048
          when: missingdhparam.stat.exists == False

        - name: update cache
          become: true
          apt: update_cache=yes
          when: (ansible_distribution == "Debian" or ansible_distribution == "Ubuntu")

        - name: update system
          become: true
          apt: upgrade=dist
          when: (ansible_distribution == "Debian" or ansible_distribution == "Ubuntu")

        - name: install packages
          when: (ansible_distribution == "Debian" or ansible_distribution == "Ubuntu")
          apt: name='{{ item }}' state=present
          become: true
          with_items:
            - nginx
            - php7.0
            - php7.0-mysql
            - php7.0-fpm
            - php7.0-cli
            - php7.0-gd
            - php7.0-json
            - php7.0-mbstring
            - php7.0-mcrypt
            - php7.0-readline
            - php7.0-xml
            - php7.0-zip
            - python-pip
            - mysql-server
            - mysql-client
            - libmysqlclient-dev
            - certbot
            - python-mysqldb

        - name: Create a new databases
          mysql_db:
            name: "{{ domainShort }}"
            login_user: "{{ mysqluser }}"
            login_password: "{{ mysqlpassword }}"
            state: present

        - name: Create a new user
          mysql_user:
            name: "{{ domainShort }}"
            login_user: "{{ mysqluser }}"
            login_password: "{{ mysqlpassword }}"
            password: "{{ lookup('password', './passwordfile chars=ascii_letters,digits,hexdigits,punctuation') }}"
            priv: '*.*:ALL'
            state: present

        - name: create www folder
          become: true
          become_method: su
          become_user: root
          file:
            path: /var/www/"{{domainLong}}"
            state: directory
            mode: 0755


        - name: Download wordpress
          become: true
          become_method: su
          become_user: root
          get_url:
            url: https://wordpress.org/latest.tar.gz
            dest: ./wordpress.tar.gz
